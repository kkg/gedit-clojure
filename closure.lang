<?xml version="1.0" encoding="UTF-8"?>

<language id="closure" _name="Closure" version="2.0" _section="Sources">
  <metadata>
    <property name="mimetypes">text/x-clojure;application/x-clojure</property> <!-- not sure about these -->
    <property name="globs">*.clj</property>
    <property name="line-comment-start">;</property>
  </metadata>

  <styles>
    <style id="comment"           _name="Comment"               map-to="def:comment"/>
    <style id="keyword"           _name="Keyword"               map-to="def:constant"/>
    <style id="escaped-char"      _name="Escaped Character"     map-to="def:special-char"/>
    <style id="string"            _name="Multiline string"      map-to="def:string"/>
    <style id="special"           _name="Special form"          map-to="def:special-constant"/>
    <style id="function"          _name="Builtin function"      map-to="def:builtin"/>
    <style id="macro"             _name="Macro"                 map-to="def:special-constant"/>
    <style id="ident"             _name="Identifier"            map-to="def:identifier"/>
    <style id="argument"          _name="Argument"              map-to="def:special-constant"/>
    <style id="character"         _name="Character"             map-to="def:constant"/>
    <style id="number"            _name="Number"                map-to="def:constant"/>
  </styles>

  <definitions>

    <context id="clj-comment" style-ref="comment" end-at-line-end="true">
      <start>(;|#!)</start>
      <include>
        <context ref="def:in-comment"/>
      </include>
    </context>

    <context id="clj-string" style-ref="string">
      <start>"</start>
      <end>"</end>
      <include>
        <context id="string-escape" style-ref="escaped-char" extend-parent="true">
          <match extended="true">
            \\(                 # open
            [\\"btnfr]        | # simple
            u[0-9A-Fa-f]{4}   | # 16-bit hex value
            [0-7]{1,3}          # octal
            )
          </match>
        </context>
      </include>
    </context>

    <context id="clj-regex" style-ref="string">
      <start>#"</start>
      <end>"</end>
      <include>
        <context id="regex-escape" style-ref="escaped-char" extend-parent="true">
          <match extended="true">
            \\(          # open
            [\\"]        # just \ or " (ignoring internal syntax of regex)
            )
          </match>
        </context>
      </include>
    </context>

    <context id="clj-number" style-ref="number">
      <prefix></prefix>
      <suffix></suffix>
      <keyword>\d[^\s\[\]\{\}\(\);\\"@~`\^,'%#]*</keyword>
    </context>

    <context id="clj-char" style-ref="character">
      <prefix></prefix>
      <suffix></suffix>
      <keyword>\\.[^\s,";@\^`~\(\)\[\]\{\}\\]*</keyword>
    </context>

    <context id="clj-arg" style-ref="argument">
      <prefix></prefix>
      <suffix></suffix>
      <keyword>%[^\s,";@\^`~\(\)\[\]\{\}\\]*</keyword>
    </context>

    <context id="clj-reserved" style-ref="keyword">
      <prefix>(?&lt;![^\s\[\]\{\}\(\);\\"@~`\^,'])</prefix>
      <suffix>(?![^\s\[\]\{\}\(\);\\"@~`\^,'])</suffix>
      <keyword>true</keyword>
      <keyword>false</keyword>
      <keyword>nil</keyword>
    </context>

    <context id="clj-special" style-ref="special">
      <prefix>(?&lt;![^\s\[\]\{\}\(\);\\"@~`\^,'])</prefix>
      <suffix>(?![^\s\[\]\{\}\(\);\\"@~`\^,'])</suffix>
      <keyword>def</keyword>
      <keyword>if</keyword>
      <keyword>do</keyword>
      <keyword>quote</keyword>
      <keyword>var</keyword>
      <keyword>recur</keyword>
      <keyword>throw</keyword>
      <keyword>catch</keyword>
      <keyword>try</keyword>
      <keyword>monitor-enter</keyword>
      <keyword>monitor-exit</keyword>
      <keyword>\.</keyword>
      <keyword>new</keyword>
      <keyword>set!</keyword>
      <keyword>fn\*</keyword>
      <keyword>let\*</keyword>
      <keyword>loop\*</keyword>
      <keyword>letfn\*</keyword>
      <keyword>case\*</keyword>
      <keyword>deftype\*</keyword>
      <keyword>reify\*</keyword>
      <keyword>clojure\.core/import\*</keyword>
    </context>

    <context id="other-builtin" style-ref="macro">
      <prefix>(?&lt;![^\s\[\]\{\}\(\);\\"@~`\^,'])</prefix>
      <suffix>(?![^\s\[\]\{\}\(\);\\"@~`\^,'])</suffix>
      <keyword>\*1</keyword>
      <keyword>\*2</keyword>
      <keyword>\*3</keyword>
      <keyword>\*clojure-version\*</keyword>
      <keyword>\*data-readers\*</keyword>
      <keyword>\*default-data-reader-fn\*</keyword>
      <keyword>\*e</keyword>
      <keyword>&amp;</keyword>
      <keyword>default-data-readers</keyword>
      <keyword>unquote</keyword>
      <keyword>unquote-splicing</keyword>
    </context>

    <context id="clj-macro" style-ref="macro">
      <prefix>(?&lt;![^\s\[\]\{\}\(\);\\"@~`\^,'])</prefix>
      <suffix>(?![^\s\[\]\{\}\(\);\\"@~`\^,'])</suffix>
      <keyword>-&gt;</keyword>
      <keyword>-&gt;&gt;</keyword>
      <keyword>\.\.</keyword>
      <keyword>add-doc-and-meta</keyword>
      <keyword>amap</keyword>
      <keyword>and</keyword>
      <keyword>areduce</keyword>
      <keyword>as-&gt;</keyword>
      <keyword>assert</keyword>
      <keyword>binding</keyword>
      <keyword>bound-fn</keyword>
      <keyword>case</keyword>
      <keyword>comment</keyword>
      <keyword>cond</keyword>
      <keyword>cond-&gt;</keyword>
      <keyword>cond-&gt;&gt;</keyword>
      <keyword>condp</keyword>
      <keyword>declare</keyword>
      <keyword>definline</keyword>
      <keyword>defmacro</keyword>
      <keyword>defmethod</keyword>
      <keyword>defmulti</keyword>
      <keyword>defn</keyword>
      <keyword>defn-</keyword>
      <keyword>defonce</keyword>
      <keyword>defstruct</keyword>
      <keyword>delay</keyword>
      <keyword>doseq</keyword>
      <keyword>dosync</keyword>
      <keyword>dotimes</keyword>
      <keyword>doto</keyword>
      <keyword>fn</keyword>
      <keyword>for</keyword>
      <keyword>future</keyword>
      <keyword>if-let</keyword>
      <keyword>if-not</keyword>
      <keyword>if-some</keyword>
      <keyword>import</keyword>
      <keyword>io!</keyword>
      <keyword>lazy-cat</keyword>
      <keyword>lazy-seq</keyword>
      <keyword>let</keyword>
      <keyword>letfn</keyword>
      <keyword>locking</keyword>
      <keyword>loop</keyword>
      <keyword>memfn</keyword>
      <keyword>ns</keyword>
      <keyword>or</keyword>
      <keyword>pvalues</keyword>
      <keyword>refer-clojure</keyword>
      <keyword>some-&gt;</keyword>
      <keyword>some-&gt;&gt;</keyword>
      <keyword>sync</keyword>
      <keyword>time</keyword>
      <keyword>when</keyword>
      <keyword>when-first</keyword>
      <keyword>when-let</keyword>
      <keyword>when-not</keyword>
      <keyword>when-some</keyword>
      <keyword>while</keyword>
      <keyword>with-bindings</keyword>
      <keyword>with-in-str</keyword>
      <keyword>with-loading-context</keyword>
      <keyword>with-local-vars</keyword>
      <keyword>with-open</keyword>
      <keyword>with-out-str</keyword>
      <keyword>with-precision</keyword>
      <keyword>with-redefs</keyword>
    </context>

    <context id="clj-function" style-ref="function">
      <prefix>(?&lt;![^\s\[\]\{\}\(\);\\"@~`\^,'])</prefix>
      <suffix>(?![^\s\[\]\{\}\(\);\\"@~`\^,'])</suffix>
      <keyword>\*</keyword>
      <keyword>\*'</keyword>
      <keyword>\+</keyword>
      <keyword>\+'</keyword>
      <keyword>-</keyword>
      <keyword>-'</keyword>
      <keyword>/</keyword>
      <keyword>&lt;</keyword>
      <keyword>&lt;=</keyword>
      <keyword>=</keyword>
      <keyword>==</keyword>
      <keyword>&gt;</keyword>
      <keyword>&gt;=</keyword>
      <keyword>accessor</keyword>
      <keyword>aclone</keyword>
      <keyword>add-classpath</keyword>
      <keyword>add-watch</keyword>
      <keyword>agent</keyword>
      <keyword>agent-error</keyword>
      <keyword>agent-errors</keyword>
      <keyword>aget</keyword>
      <keyword>alength</keyword>
      <keyword>alias</keyword>
      <keyword>all-ns</keyword>
      <keyword>alter</keyword>
      <keyword>alter-meta!</keyword>
      <keyword>alter-var-root</keyword>
      <keyword>ancestors</keyword>
      <keyword>apply</keyword>
      <keyword>array-map</keyword>
      <keyword>aset</keyword>
      <keyword>assoc</keyword>
      <keyword>assoc!</keyword>
      <keyword>assoc-in</keyword>
      <keyword>associative\?</keyword>
      <keyword>atom</keyword>
      <keyword>await</keyword>
      <keyword>await-for</keyword>
      <keyword>await1</keyword>
      <keyword>bases</keyword>
      <keyword>bigdec</keyword>
      <keyword>bigint</keyword>
      <keyword>biginteger</keyword>
      <keyword>bit-and</keyword>
      <keyword>bit-and-not</keyword>
      <keyword>bit-clear</keyword>
      <keyword>bit-flip</keyword>
      <keyword>bit-not</keyword>
      <keyword>bit-or</keyword>
      <keyword>bit-set</keyword>
      <keyword>bit-shift-left</keyword>
      <keyword>bit-shift-right</keyword>
      <keyword>bit-test</keyword>
      <keyword>bit-xor</keyword>
      <keyword>boolean</keyword>
      <keyword>boolean-array</keyword>
      <keyword>booleans</keyword>
      <keyword>bound-fn\*</keyword>
      <keyword>bound\?</keyword>
      <keyword>butlast</keyword>
      <keyword>byte</keyword>
      <keyword>byte-array</keyword>
      <keyword>bytes</keyword>
      <keyword>cast</keyword>
      <keyword>char</keyword>
      <keyword>char\?</keyword>
      <keyword>char-array</keyword>
      <keyword>chars</keyword>
      <keyword>chunk</keyword>
      <keyword>chunk-append</keyword>
      <keyword>chunk-buffer</keyword>
      <keyword>chunk-cons</keyword>
      <keyword>chunk-first</keyword>
      <keyword>chunk-next</keyword>
      <keyword>chunk-rest</keyword>
      <keyword>chunked-seq\?</keyword>
      <keyword>class</keyword>
      <keyword>class\?</keyword>
      <keyword>clear-agent-errors</keyword>
      <keyword>clojure-version</keyword>
      <keyword>coll\?</keyword>
      <keyword>commute</keyword>
      <keyword>comp</keyword>
      <keyword>comparator</keyword>
      <keyword>compare</keyword>
      <keyword>compare-and-set!</keyword>
      <keyword>compile</keyword>
      <keyword>complement</keyword>
      <keyword>concat</keyword>
      <keyword>conj</keyword>
      <keyword>conj!</keyword>
      <keyword>cons</keyword>
      <keyword>constantly</keyword>
      <keyword>contains\?</keyword>
      <keyword>count</keyword>
      <keyword>counted\?</keyword>
      <keyword>create-ns</keyword>
      <keyword>create-struct</keyword>
      <keyword>cycle</keyword>
      <keyword>dec</keyword>
      <keyword>dec'</keyword>
      <keyword>decimal\?</keyword>
      <keyword>delay\?</keyword>
      <keyword>deliver</keyword>
      <keyword>denominator</keyword>
      <keyword>deref</keyword>
      <keyword>derive</keyword>
      <keyword>descendants</keyword>
      <keyword>destructure</keyword>
      <keyword>disj</keyword>
      <keyword>disj!</keyword>
      <keyword>dissoc</keyword>
      <keyword>dissoc!</keyword>
      <keyword>distinct</keyword>
      <keyword>distinct\?</keyword>
      <keyword>doall</keyword>
      <keyword>dorun</keyword>
      <keyword>double</keyword>
      <keyword>double-array</keyword>
      <keyword>doubles</keyword>
      <keyword>drop</keyword>
      <keyword>drop-last</keyword>
      <keyword>drop-while</keyword>
      <keyword>empty</keyword>
      <keyword>empty\?</keyword>
      <keyword>ensure</keyword>
      <keyword>enumeration-seq</keyword>
      <keyword>error-handler</keyword>
      <keyword>error-mode</keyword>
      <keyword>eval</keyword>
      <keyword>even\?</keyword>
      <keyword>every-pred</keyword>
      <keyword>every\?</keyword>
      <keyword>ex-data</keyword>
      <keyword>ex-info</keyword>
      <keyword>false\?</keyword>
      <keyword>ffirst</keyword>
      <keyword>file-seq</keyword>
      <keyword>filter</keyword>
      <keyword>filterv</keyword>
      <keyword>find</keyword>
      <keyword>find-keyword</keyword>
      <keyword>find-ns</keyword>
      <keyword>find-var</keyword>
      <keyword>first</keyword>
      <keyword>flatten</keyword>
      <keyword>float</keyword>
      <keyword>float-array</keyword>
      <keyword>float\?</keyword>
      <keyword>floats</keyword>
      <keyword>flush</keyword>
      <keyword>fn\?</keyword>
      <keyword>fnext</keyword>
      <keyword>fnil</keyword>
      <keyword>force</keyword>
      <keyword>format</keyword>
      <keyword>frequencies</keyword>
      <keyword>future-call</keyword>
      <keyword>future-cancel</keyword>
      <keyword>future-cancelled\?</keyword>
      <keyword>future-done\?</keyword>
      <keyword>future\?</keyword>
      <keyword>gensym</keyword>
      <keyword>get</keyword>
      <keyword>get-in</keyword>
      <keyword>get-method</keyword>
      <keyword>get-thread-bindings</keyword>
      <keyword>get-validator</keyword>
      <keyword>group-by</keyword>
      <keyword>hash</keyword>
      <keyword>hash-map</keyword>
      <keyword>hash-ordered-coll</keyword>
      <keyword>hash-set</keyword>
      <keyword>hash-unordered-coll</keyword>
      <keyword>identical\?</keyword>
      <keyword>identity</keyword>
      <keyword>ifn\?</keyword>
      <keyword>inc</keyword>
      <keyword>inc'</keyword>
      <keyword>instance\?</keyword>
      <keyword>int</keyword>
      <keyword>int-array</keyword>
      <keyword>ints</keyword>
      <keyword>integer\?</keyword>
      <keyword>interleave</keyword>
      <keyword>intern</keyword>
      <keyword>interpose</keyword>
      <keyword>into</keyword>
      <keyword>into-array</keyword>
      <keyword>isa\?</keyword>
      <keyword>iterate</keyword>
      <keyword>iterator-seq</keyword>
      <keyword>juxt</keyword>
      <keyword>keep</keyword>
      <keyword>keep-indexed</keyword>
      <keyword>key</keyword>
      <keyword>keys</keyword>
      <keyword>keyword</keyword>
      <keyword>keyword\?</keyword>
      <keyword>last</keyword>
      <keyword>line-seq</keyword>
      <keyword>list</keyword>
      <keyword>list\*</keyword>
      <keyword>list\?</keyword>
      <keyword>load</keyword>
      <keyword>load-reader</keyword>
      <keyword>load-string</keyword>
      <keyword>loaded-libs</keyword>
      <keyword>long</keyword>
      <keyword>long-array</keyword>
      <keyword>longs</keyword>
      <keyword>macroexpand</keyword>
      <keyword>macroexpand-1</keyword>
      <keyword>make-array</keyword>
      <keyword>make-hierarchy</keyword>
      <keyword>map</keyword>
      <keyword>map-indexed</keyword>
      <keyword>map\?</keyword>
      <keyword>mapcat</keyword>
      <keyword>mapv</keyword>
      <keyword>max</keyword>
      <keyword>max-key</keyword>
      <keyword>memoize</keyword>
      <keyword>merge</keyword>
      <keyword>merge-with</keyword>
      <keyword>meta</keyword>
      <keyword>methods</keyword>
      <keyword>min</keyword>
      <keyword>min-key</keyword>
      <keyword>mix-collection-hash</keyword>
      <keyword>mod</keyword>
      <keyword>name</keyword>
      <keyword>namespace</keyword>
      <keyword>neg\?</keyword>
      <keyword>newline</keyword>
      <keyword>next</keyword>
      <keyword>nfirst</keyword>
      <keyword>nil\?</keyword>
      <keyword>nnext</keyword>
      <keyword>not</keyword>
      <keyword>not-any\?</keyword>
      <keyword>not-empty</keyword>
      <keyword>not-every\?</keyword>
      <keyword>not=</keyword>
      <keyword>ns-aliases</keyword>
      <keyword>ns-imports</keyword>
      <keyword>ns-interns</keyword>
      <keyword>ns-map</keyword>
      <keyword>ns-name</keyword>
      <keyword>ns-publics</keyword>
      <keyword>ns-refers</keyword>
      <keyword>ns-resolve</keyword>
      <keyword>ns-unalias</keyword>
      <keyword>ns-unmap</keyword>
      <keyword>nth</keyword>
      <keyword>nthnext</keyword>
      <keyword>nthrest</keyword>
      <keyword>num</keyword>
      <keyword>number\?</keyword>
      <keyword>numerator</keyword>
      <keyword>object-array</keyword>
      <keyword>odd\?</keyword>
      <keyword>parents</keyword>
      <keyword>partial</keyword>
      <keyword>partition</keyword>
      <keyword>partition-all</keyword>
      <keyword>partition-by</keyword>
      <keyword>pcalls</keyword>
      <keyword>peek</keyword>
      <keyword>persistent!</keyword>
      <keyword>pmap</keyword>
      <keyword>pop</keyword>
      <keyword>pop!</keyword>
      <keyword>pop-thread-bindings</keyword>
      <keyword>pos\?</keyword>
      <keyword>pr</keyword>
      <keyword>pr-str</keyword>
      <keyword>prefer-method</keyword>
      <keyword>prefers</keyword>
      <keyword>print</keyword>
      <keyword>print-str</keyword>
      <keyword>printf</keyword>
      <keyword>println</keyword>
      <keyword>println-str</keyword>
      <keyword>prn</keyword>
      <keyword>prn-str</keyword>
      <keyword>promise</keyword>
      <keyword>push-thread-bindings</keyword>
      <keyword>quot</keyword>
      <keyword>rand</keyword>
      <keyword>rand-int</keyword>
      <keyword>rand-nth</keyword>
      <keyword>range</keyword>
      <keyword>ratio\?</keyword>
      <keyword>rational\?</keyword>
      <keyword>rationalize</keyword>
      <keyword>re-find</keyword>
      <keyword>re-groups</keyword>
      <keyword>re-matcher</keyword>
      <keyword>re-matches</keyword>
      <keyword>re-pattern</keyword>
      <keyword>re-seq</keyword>
      <keyword>read</keyword>
      <keyword>read-line</keyword>
      <keyword>read-string</keyword>
      <keyword>realized\?</keyword>
      <keyword>reduce</keyword>
      <keyword>reduce-kv</keyword>
      <keyword>reduced</keyword>
      <keyword>reduced\?</keyword>
      <keyword>reductions</keyword>
      <keyword>ref</keyword>
      <keyword>ref-history-count</keyword>
      <keyword>ref-max-history</keyword>
      <keyword>ref-min-history</keyword>
      <keyword>ref-set</keyword>
      <keyword>refer</keyword>
      <keyword>release-pending-sends</keyword>
      <keyword>rem</keyword>
      <keyword>remove</keyword>
      <keyword>remove-all-methods</keyword>
      <keyword>remove-method</keyword>
      <keyword>remove-ns</keyword>
      <keyword>remove-watch</keyword>
      <keyword>repeat</keyword>
      <keyword>repeatedly</keyword>
      <keyword>replace</keyword>
      <keyword>replicate</keyword>
      <keyword>require</keyword>
      <keyword>reset!</keyword>
      <keyword>reset-meta!</keyword>
      <keyword>resolve</keyword>
      <keyword>rest</keyword>
      <keyword>restart-agent</keyword>
      <keyword>resultset-seq</keyword>
      <keyword>reverse</keyword>
      <keyword>reversible\?</keyword>
      <keyword>rseq</keyword>
      <keyword>rsubseq</keyword>
      <keyword>second</keyword>
      <keyword>select-keys</keyword>
      <keyword>send</keyword>
      <keyword>send-off</keyword>
      <keyword>send-via</keyword>
      <keyword>seq</keyword>
      <keyword>seq\?</keyword>
      <keyword>seque</keyword>
      <keyword>sequence</keyword>
      <keyword>sequential\?</keyword>
      <keyword>set</keyword>
      <keyword>set-agent-send-executor!</keyword>
      <keyword>set-agent-send-off-executor!</keyword>
      <keyword>set-error-handler!</keyword>
      <keyword>set-error-mode!</keyword>
      <keyword>set-validator!</keyword>
      <keyword>set\?</keyword>
      <keyword>short</keyword>
      <keyword>short-array</keyword>
      <keyword>shorts</keyword>
      <keyword>shuffle</keyword>
      <keyword>shutdown-agents</keyword>
      <keyword>slurp</keyword>
      <keyword>some</keyword>
      <keyword>some-fn</keyword>
      <keyword>some\?</keyword>
      <keyword>sort</keyword>
      <keyword>sort-by</keyword>
      <keyword>sorted-map</keyword>
      <keyword>sorted-map-by</keyword>
      <keyword>sorted-set</keyword>
      <keyword>sorted-set-by</keyword>
      <keyword>sorted\?</keyword>
      <keyword>special-symbol\?</keyword>
      <keyword>spit</keyword>
      <keyword>split-at</keyword>
      <keyword>split-with</keyword>
      <keyword>str</keyword>
      <keyword>string\?</keyword>
      <keyword>struct</keyword>
      <keyword>struct-map</keyword>
      <keyword>subs</keyword>
      <keyword>subseq</keyword>
      <keyword>subvec</keyword>
      <keyword>supers</keyword>
      <keyword>swap!</keyword>
      <keyword>symbol</keyword>
      <keyword>symbol\?</keyword>
      <keyword>take</keyword>
      <keyword>take-last</keyword>
      <keyword>take-nth</keyword>
      <keyword>take-while</keyword>
      <keyword>test</keyword>
      <keyword>the-ns</keyword>
      <keyword>thread-bound\?</keyword>
      <keyword>to-array</keyword>
      <keyword>to-array-2d</keyword>
      <keyword>trampoline</keyword>
      <keyword>transient</keyword>
      <keyword>tree-seq</keyword>
      <keyword>true\?</keyword>
      <keyword>type</keyword>
      <keyword>unchecked-add</keyword>
      <keyword>unchecked-add-int</keyword>
      <keyword>unchecked-byte</keyword>
      <keyword>unchecked-char</keyword>
      <keyword>unchecked-dec</keyword>
      <keyword>unchecked-dec-int</keyword>
      <keyword>unchecked-divide-int</keyword>
      <keyword>unchecked-double</keyword>
      <keyword>unchecked-float</keyword>
      <keyword>unchecked-inc</keyword>
      <keyword>unchecked-inc-int</keyword>
      <keyword>unchecked-int</keyword>
      <keyword>unchecked-long</keyword>
      <keyword>unchecked-multiply</keyword>
      <keyword>unchecked-multiply-int</keyword>
      <keyword>unchecked-negate</keyword>
      <keyword>unchecked-negate-int</keyword>
      <keyword>unchecked-remainder-int</keyword>
      <keyword>unchecked-short</keyword>
      <keyword>unchecked-subtract</keyword>
      <keyword>unchecked-subtract-int</keyword>
      <keyword>underive</keyword>
      <keyword>unsigned-bit-shift-right</keyword>
      <keyword>update-in</keyword>
      <keyword>use</keyword>
      <keyword>val</keyword>
      <keyword>vals</keyword>
      <keyword>var-get</keyword>
      <keyword>var-set</keyword>
      <keyword>var\?</keyword>
      <keyword>vary-meta</keyword>
      <keyword>vec</keyword>
      <keyword>vector</keyword>
      <keyword>vector\?</keyword>
      <keyword>with-bindings\*</keyword>
      <keyword>with-meta</keyword>
      <keyword>with-redefs-fn</keyword>
      <keyword>xml-seq</keyword>
      <keyword>zero\?</keyword>
      <keyword>zipmap</keyword>
    </context>

    <context id="clj-keyword" style-ref="keyword">
      <prefix>:</prefix>
      <suffix>(?![^\s\[\]\{\}\(\);\\"@~`\^,'])</suffix>
      <keyword>[^\s\[\]\{\}\(\);\\"@~`\^,']+</keyword>
    </context>

    <context id="clj-ident" style-ref="ident">
      <prefix>(?&lt;![^\s\[\]\{\}\(\);\\"@~`\^,'])</prefix>
      <suffix>(?![^\s\[\]\{\}\(\);\\"@~`\^,'])</suffix>
      <keyword>[^\s,";@\^`~\(\)\[\]\{\}\\'#][^\s,";@\^`~\(\)\[\]\{\}\\]*</keyword>
    </context>


    <context id="closure">
      <include>
        <context ref="clj-comment"/>
        <context ref="clj-string"/>
        <context ref="clj-regex"/>
        <context ref="clj-number"/>
        <context ref="clj-char"/>
        <context ref="clj-arg"/>
        <!-- reader macros -->
        <context ref="clj-reserved"/>
        <context ref="clj-special"/>
        <context ref="other-builtin"/>
        <context ref="clj-macro"/>
        <context ref="clj-function"/>
        <context ref="clj-keyword"/>
        <context ref="clj-ident"/>
      </include>
    </context>

  </definitions>
</language>

